<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="accommodationMapper">
    <select id="findUsingFilter" resultMap="accommodation">
        SELECT accommodation_id,
               accommodation_name,
               is_super_host,
               scores_rating,
               maximum_capacity,
               price_exchanged,
               price_discounted_exchanged,
               cleaning_fee_exchanged,
               service_tax_exchanged,
               latitude,
               longitude,
               i.url AS image_url,
               c.id AS city_id,
               c.name AS city_name,
               c.country AS city_country
        FROM   image i
        RIGHT OUTER JOIN
               (SELECT a1.id AS accommodation_id,
                       name AS accommodation_name,
                       city,
                       is_super_host,
                       latitude,
                       longitude,
                       maximum_capacity,
                       minimum_nights,
                       maximum_nights,
                       scores_rating,
                       price_exchanged,
                       price_discounted_exchanged,
                       cleaning_fee_exchanged,
                       service_tax_exchanged
               FROM    (SELECT id,
                               name,
                               city,
                               is_super_host,
                               latitude,
                               longitude,
                               maximum_capacity,
                               minimum_nights,
                               maximum_nights,
                               scores_rating,
                               TRUNCATE(price * ${exchangeRate}, 0) AS price_exchanged,
                               TRUNCATE((price - price * discount_rate) * ${exchangeRate}, 0) AS price_discounted_exchanged,
                               TRUNCATE(cleaning_fee * ${exchangeRate}, 0) AS cleaning_fee_exchanged,
                               TRUNCATE((price - price * discount_rate) * (1 - ((price - price * discount_rate) -
                                    (SELECT MIN(price)
                                    FROM    accommodation)) /
                                    (SELECT MAX(price) - MIN(price)
                                    FROM    accommodation)) *
                                    (SELECT service_max
                                    FROM    fee_policy) * ${exchangeRate}, 0) AS service_tax_exchanged
                       FROM    accommodation) AS a1
               <where>
                       minimum_nights <![CDATA[<=]]> #{period}
               AND     maximum_nights >= #{period}
                    <if test="people != 0">
                       AND     maximum_capacity >= #{people}
                    </if>
                    <if test="priceMin != 0">
                       AND     TRUNCATE(price_discounted_exchanged + service_tax_exchanged + service_tax_exchanged *
                                    (SELECT accommodation_tax
                                    FROM    fee_policy) + cleaning_fee_exchanged, 0)  >= #{priceMin}
                    </if>
                    <if test="priceMax != 0">
                       AND     TRUNCATE(price_discounted_exchanged + service_tax_exchanged + service_tax_exchanged *
                                    (SELECT accommodation_tax
                                    FROM    fee_policy) + cleaning_fee_exchanged, 0) <![CDATA[<=]]> #{priceMax}
                    </if>
               AND     a1.id NOT IN (SELECT b.accommodation
                                    FROM    booking b
                                    LEFT OUTER JOIN accommodation a
                                    ON b.accommodation = a.id
                                    WHERE   ((check_in <![CDATA[<=]]> #{checkIn} AND check_out > #{checkIn})
                                            OR (check_in <![CDATA[<]]> #{checkOut} AND check_out > #{checkOut})
                                            OR ((check_in BETWEEN #{checkIn} AND #{checkOut})
                                               AND (check_out BETWEEN #{checkIn} AND #{checkOut}))))
               </where>
        LIMIT  20
        OFFSET #{itemsOffset}) a2
        ON i.accommodation = a2.accommodation_id
        LEFT OUTER JOIN city c
        ON a2.city = c.id;
    </select>
    <resultMap id="accommodation" type="Accommodation">
        <id property="id" column="accommodation_id"/>
        <result property="name" column="accommodation_name"/>
        <result property="isSuperHost" column="is_super_host"/>
        <result property="scoresRating" column="scores_rating"/>
        <result property="maximumCapacity" column="maximum_capacity"/>

        <association property="city" javaType="City">
            <id property="id" column="city_id"/>
            <result property="name" column="city_name"/>
            <result property="country" column="city_country"/>
        </association>

        <association property="coordinates" javaType="Coordinates">
            <result property="latitude" column="latitude"/>
            <result property="longitude" column="longitude"/>
        </association>

        <association property="fee" javaType="Fee">
            <result property="originalPrice" column="price_exchanged"/>
            <result property="discountedPrice" column="price_discounted_exchanged"/>
            <result property="cleaningFee" column="cleaning_fee_exchanged"/>
            <result property="serviceTax" column="service_tax_exchanged"/>
        </association>

        <collection property="images" ofType="String">
            <result column="image_url"/>
        </collection>
    </resultMap>

    <select id="countOfFilterResult" resultType="int">
        SELECT  COUNT(price)
        FROM    accommodation a
        LEFT OUTER JOIN
        (SELECT id,
                TRUNCATE((price - price * discount_rate), 2) AS price_discounted,
                TRUNCATE((price - price * discount_rate) * (1 - ((price - price * discount_rate) -
                    (SELECT MIN(price)
                    FROM    accommodation)) /
                    (SELECT MAX(price) - MIN(price)
                    FROM    accommodation)) *
                    (SELECT service_max
                    FROM    fee_policy), 2) AS service_tax
        FROM    accommodation) temp
        ON a.id = temp.id
        <where>
            minimum_nights <![CDATA[<=]]> #{period}
            AND maximum_nights >= #{period}
            <if test="people != 0">
                AND maximum_capacity >= #{people}
            </if>
            <if test="priceMin != 0">
                AND TRUNCATE((price_discounted + service_tax + service_tax *
                        (SELECT accommodation_tax
                        FROM    fee_policy) + cleaning_fee) * ${exchangeRate}, 0) >= #{priceMin}
            </if>
            <if test="priceMax != 0">
                AND TRUNCATE((price_discounted + service_tax + service_tax *
                        (SELECT accommodation_tax
                        FROM fee_policy) + cleaning_fee) * ${exchangeRate}, 0) <![CDATA[<=]]> #{priceMax}
        </if>
        </where>
    </select>

    <select id="findAccommodationChargeInfoById" resultMap="chargeOfAccommodation">
        SELECT a.id AS id,
               TRUNCATE(price * ${exchangeRate}, 0) AS price_original_exchanged,
               price_discounted_exchanged,
               service_tax_exchanged,
               cleaning_fee_exchanged
        FROM   accommodation AS a,
               (SELECT id,
                       TRUNCATE((price - price * discount_rate) * ${exchangeRate}, 0) AS price_discounted_exchanged,
                       TRUNCATE(cleaning_fee * ${exchangeRate}, 0) AS cleaning_fee_exchanged,
                       TRUNCATE((price - price * discount_rate) * (1 - ((price - price * discount_rate) -
                            (SELECT MIN(price)
                            FROM    accommodation)) /
                            (SELECT MAX(price) - MIN(price)
                            FROM    accommodation)) *
                            (SELECT service_max
                            FROM    fee_policy) * ${exchangeRate}, 0) AS service_tax_exchanged
               FROM    accommodation) AS temp
        WHERE temp.id = a.id
        AND a.id = #{id};
    </select>
    <resultMap id="chargeOfAccommodation" type="Accommodation">
        <id property="id" column="id"/>
        <association property="fee" javaType="Fee">
            <result property="originalPrice" column="price_original_exchanged"/>
            <result property="discountedPrice" column="price_discounted_exchanged"/>
            <result property="cleaningFee" column="cleaning_fee_exchanged"/>
            <result property="serviceTax" column="service_tax_exchanged"/>
        </association>
    </resultMap>
    
    <select id="findFeeUsingFilterForTest" resultMap="test">
        SELECT id,
               TRUNCATE(price_discounted_exchanged + service_tax_exchanged + service_tax_exchanged *
               (SELECT accommodation_tax
                FROM   fee_policy) + cleaning_fee_exchanged, 0) AS price_total
        FROM   (SELECT id,
                       TRUNCATE((price - price * discount_rate) * ${exchangeRate}, 0) AS price_discounted_exchanged,
                       TRUNCATE(cleaning_fee * ${exchangeRate}, 0) AS cleaning_fee_exchanged,
                       TRUNCATE((price - price * discount_rate) * (1 - ((price - price * discount_rate) -
                            (SELECT MIN(price)
                            FROM    accommodation)) /
                            (SELECT MAX(price) - MIN(price)
                            FROM    accommodation)) *
                            (SELECT service_max
                            FROM    fee_policy) * ${exchangeRate}, 0) AS service_tax_exchanged,
                       minimum_nights,
                       maximum_nights,
                       maximum_capacity
                       FROM accommodation) AS a
        WHERE   minimum_nights <![CDATA[<=]]> #{period}
        AND     maximum_nights >= #{period}
        AND     maximum_capacity >= #{people};
    </select>
    <resultMap id="test" type="HashMap">
        <result property="id" column="id"/>
        <result property="price" column="price_total" javaType="int"/>
    </resultMap>

    <select id="findFeeUsingFilter" resultType="int">
        SELECT TRUNCATE(price_discounted_exchanged + service_tax_exchanged + service_tax_exchanged *
                    (SELECT accommodation_tax
                    FROM    fee_policy) + cleaning_fee_exchanged, 0) AS price_total
        FROM   (SELECT TRUNCATE((price - price * discount_rate) * ${exchangeRate}, 0) AS price_discounted_exchanged,
                       TRUNCATE(cleaning_fee * ${exchangeRate}, 0) AS cleaning_fee_exchanged,
                       TRUNCATE((price - price * discount_rate) * (1 - ((price - price * discount_rate) -
                            (SELECT MIN(price)
                            FROM    accommodation)) /
                            (SELECT MAX(price) - MIN(price)
                            FROM    accommodation)) *
                            (SELECT service_max
                            FROM    fee_policy) * ${exchangeRate}, 0) AS service_tax_exchanged,
                       minimum_nights,
                       maximum_nights,
                       maximum_capacity
                FROM    accommodation) AS a
        WHERE   minimum_nights <![CDATA[<=]]> #{period}
          AND   maximum_nights >= #{period}
          AND   maximum_capacity >= #{people};
    </select>

    <select id="findMinAndMaxOfFee" resultMap="minAndMax">
        SELECT MIN(TRUNCATE(price_discounted_exchanged + service_tax_exchanged + service_tax_exchanged *
                    (SELECT accommodation_tax
                    FROM    fee_policy) + cleaning_fee_exchanged, 0)) AS min,
               MAX(TRUNCATE(price_discounted_exchanged + service_tax_exchanged + service_tax_exchanged *
                    (SELECT accommodation_tax
                    FROM    fee_policy) + cleaning_fee_exchanged, 0)) AS max
        FROM   (SELECT TRUNCATE((price - price * discount_rate) * ${exchangeRate}, 0) AS price_discounted_exchanged,
                       TRUNCATE(cleaning_fee * ${exchangeRate}, 0) AS cleaning_fee_exchanged,
                       TRUNCATE((price - price * discount_rate) * (1 - ((price - price * discount_rate) -
                            (SELECT MIN(price)
                            FROM    accommodation)) /
                            (SELECT MAX(price) - MIN(price)
                            FROM    accommodation)) *
                            (SELECT service_max
                            FROM    fee_policy) * ${exchangeRate}, 0) AS service_tax_exchanged
               FROM    accommodation) AS a;
    </select>
    <resultMap id="minAndMax" type="HashMap">
        <result property="min" column="min" javaType="int"/>
        <result property="max" column="max" javaType="int"/>
    </resultMap>
</mapper>
